/*
Author: James Spanos (Dualnames)

Abstract: With only you putting simple functions you can set control method
          from Sierra to Lucas Arts to Bass.


Well, you'd need to create the GUIS that you will use(regardless of control type).
Then just place a mouse_click function from the 3 available at your on mouse click 
section of your game, use the modules function to set the rest of the GUIS and tadda.

NOTE: BASS should have HandleInventoryScripts as true, while the rest two should have it
      to false.

Well, place this on your mouse click section of your global/module/room script(depends
on where you want your mouse to react like it did in Sierra games.

Example:

function on_mouse_click(MouseButton *button) {
SierraFunctions.mouse_click(button);
}

-Same goes for:
-LucasArtsFunctions.mouse_click(MouseButton button);
and:
-BASSFunctions.mouse_click(MouseButton click, bool reverse=false);

//exception on BASS: if you want left and right click reversed set reverse as true..

Revision History:

20 April 09: v1.0  First release of module

Licence:

SimpleControl AGS script module
Copyright (C) 2009 James Spanos

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
DEALINGS IN THE SOFTWARE.
*/

/*
General:
BASS Control is based on the fact that right click is used for walk/talk to/use
and left click to examine objects/hotspots/characters.
*/
static function BASSFunctions::mouse_click(MouseButton click, bool reverse){//handle true
Hotspot*htsp=Hotspot.GetAtScreenXY(mouse.x, mouse.y);
InventoryItem*invitem=InventoryItem.GetAtScreenXY(mouse.x, mouse.y);
if (invitem!=null) {
if ((reverse==false) && (click==eMouseLeftInv)|| (reverse==true) && (click==eMouseRightInv)) {
invitem.RunInteraction(eModeLookat);
}
if ((reverse==false) && (click==eMouseRightInv)|| (reverse==true) && (click==eMouseLeftInv))  {
mouse.Mode=eModeUseinv;
player.ActiveInventory=invitem;
}
return;
}
if ((reverse==false) && (click==eMouseRight)|| (reverse==true) && (click==eMouseLeft))  {
if (player.ActiveInventory!=null) {
player.ActiveInventory=null;
return;
}
if (Character.GetAtScreenXY(mouse.x, mouse.y)!=null) {
ProcessClick(mouse.x,mouse.y,eModeTalkto);  
return;
}
if ((htsp!=null) && (htsp.ID>0) || (Object.GetAtScreenXY(mouse.x, mouse.y)!=null)){
ProcessClick(mouse.x,mouse.y,eModeInteract);  
return;
}
player.Walk(mouse.x, mouse.y, eNoBlock, eWalkableAreas);
}
if ((reverse==false) && (click==eMouseLeft)|| (reverse==true) && (click==eMouseRight))  {
if (player.ActiveInventory!=null) {
ProcessClick(mouse.x, mouse.y, eModeUseinv);  
return;
}
ProcessClick(mouse.x, mouse.y, eModeLookat);  
}
}